#!/usr/bin/env bash

## SETUP
  here="`dirname $0`"

  source $here/test_helper
  source $here/../scripts/pair

example="doesn't leak variables outside the function"
(set -o posix; set) >/tmp/vars.before
pair rylnd &> /dev/null
(set -o posix; set) >/tmp/vars.after
extra_vars=`diff /tmp/vars.{before,after} --ignore-matching-lines=GIT_AUTHOR`
rm /tmp/vars.{before,after}
assert blank "$extra_vars"

example="sets \$GIT_AUTHOR_NAME"
pair rylnd &> /dev/null
assert equal "$GIT_AUTHOR_NAME" "Ryland Herrick"

example="sets \$GIT_AUTHOR_EMAIL"
pair rylnd &> /dev/null
assert match "$GIT_AUTHOR_EMAIL" "rylnd"

example="unsets \$GIT_AUTHOR_NAME"
pair -u &> /dev/null
assert blank "$GIT_AUTHOR_NAME"

example="unsets \$GIT_AUTHOR_EMAIL"
pair -u &> /dev/null
assert blank "$GIT_AUTHOR_EMAIL"

example="uses dev@bendyworks.com in the email"
pair rylnd &> /dev/null
assert match "$GIT_AUTHOR_EMAIL" "dev.*bendyworks\.com"

example="sets multiple usernames in the email"
pair rylnd bendycode &> /dev/null
assert match "$GIT_AUTHOR_EMAIL" "rylnd"
assert match "$GIT_AUTHOR_EMAIL" "bendycode"

example="sorts multiple usernames in the email alphabetically"
pair rylnd bendycode &> /dev/null
assert match "$GIT_AUTHOR_EMAIL" "bendycode.rylnd@"

example="sets multiple names for the author"
pair rylnd bendycode &> /dev/null
assert match "$GIT_AUTHOR_NAME" "Ryland\ Herrick"
assert match "$GIT_AUTHOR_NAME" "Stephen\ Anderson"

example="sorts author names alphabetically by username"
pair rylnd bendycode &> /dev/null
assert equal "$GIT_AUTHOR_NAME" "Stephen Anderson and Ryland Herrick"

example="correctly lists more than two authors WITH AN OXFORD COMMA"
pair rylnd bendycode bigtiger &> /dev/null
assert equal "$GIT_AUTHOR_NAME" "Stephen Anderson, Jim Remsik, and Ryland Herrick"

## TEARDOWN
  pair -u &> /dev/null
  echo
