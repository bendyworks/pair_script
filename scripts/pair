# Configures the local git author/email to a list of developers when pair programming
#
# Installation: Source this file to define the pair function in your session.
#
# Usage: pair rylnd mathias (Sets the author to 'Matt Gauger and Ryland Herrick')
#        pair               (Lists current git author/email)
#        pair -u            (Unsets the author/email)
#
# You may also set more than two users in the pair:
#        pair bigtiger devn mathias (Sets the author to 'Jim Remsik, Devin Walters and Matt Gauger')
#
# Thanks to Brian Hemlkamp (http://brynary.com) for the original ruby implementation
# and to Matt Gauger for his work on the ruby version
#
# Author: Ryland Herrick


pair() {
  local name names email pair_name pair_email user usernames

  #### CONFIGURATION #####################################################
  local PAIR_EMAIL_USERNAME='dev'
  local PAIR_EMAIL_DOMAIN='bendyworks.com'

  # Bendyworkers:
  local begriffs='Joe Nelson'
  local bendycode='Stephen Anderson'
  local bigtiger='Jim Remsik'
  local devn='Devin Walters'
  local jaym3s='Jaymes Waters'
  local listrophy='Bradley Grzesiak'
  local mathias='Matt Gauger'
  local randland='Nick Karpenske'
  local rylnd='Ryland Herrick'
  local twopoint718='Chris Wilson'
  local whblondeau='Bill Blondeau'

  # Other:
  local jcarley='Jeff Carley'
  local angelic='Angel N. Sciortino'
  local glynnis='Glynnis Ritchie'
  local jdpace='Jared Pace'
  local m5rk='Mark McEahern'
  #### END CONFIGURATION ##################################################

  set_session_vars() {
    [[ ! -f "$HOME/.pairrc" ]] || source "$HOME/.pairrc"
  }

  print_config() {
    set_session_vars
    [[ -n "$GIT_AUTHOR_NAME" ]] && name="$GIT_AUTHOR_NAME" || name=`git config user.name`
    [[ -n "$GIT_AUTHOR_EMAIL" ]] && email="$GIT_AUTHOR_EMAIL" || email=`git config user.email`
    printf "user.name  = %s\n" "$name"
    printf "user.email = %s\n" "$email"
  }

  case "x$1" in
  x-u) echo "unset GIT_AUTHOR_NAME GIT_AUTHOR_EMAIL" > "$HOME/.pairrc"
      print_config
      return 0
      ;;
  x-q) set_session_vars
      return 0
      ;;
  esac

  usernames=(`printf "%s\n" $@ | tr A-Z a-z | sort`)

  if [[ -z "$usernames" ]]; then
    print_config
    return 0
  fi

  for user in ${usernames[@]}
  do
    eval name=\$$user
    if [[ -z "$name" ]]; then
      echo "Couldn't find author name for GitHub username: $user"
      return 1
    fi
    names=(${names[@]} \$$user)
    pair_email=$pair_email+$user
  done

  pair_email=$PAIR_EMAIL_USERNAME$pair_email@$PAIR_EMAIL_DOMAIN

  if [[ ${#names[@]} > 2 ]]; then
    pair_name=`printf "%s, " "${names[@]}"`
    pair_name=`echo "$pair_name" | sed 's/,\([^,]*\), $/, and\1/'`
  else
    pair_name=`printf "%s and " "${names[@]}"`
    pair_name=`echo "$pair_name" | sed 's/ and $//'`
  fi

  echo "export GIT_AUTHOR_NAME=\"$pair_name\" GIT_AUTHOR_EMAIL=\"$pair_email\"" > "$HOME/.pairrc"
  print_config
}
