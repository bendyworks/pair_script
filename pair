#!/bin/bash

# Configures the git author to a list of developers when pair programming
#
# Usage: pair ryalnd mathias (Sets the author to 'Matt Gauger and Ryland Herrick')
#        pair                (Unsets the author so the git global config takes effect)
#
# You may also set more than two users in the pair:
#        pair bigtiger devn mathias (Sets the author to 'Jim Remsik, Devin Walters and Matt Gauger')
#
# Thanks to Brian Hemlkamp (http://brynary.com) for the original ruby implementation
# and to Matt Gauger for his work on the ruby version
#
# Author: Ryland Herrick

#######################################################################
## CONFIGURATION

PAIR_EMAIL_USERNAME='dev'
PAIR_EMAIL_DOMAIN='bendyworks.com'

# Bendyworkers:
AUTHOR_begriffs='Joe Nelson'
AUTHOR_bendycode='Stephen Anderson'
AUTHOR_bigtiger='Jim Remsik'
AUTHOR_devn='Devin Walters'
AUTHOR_jaym3s='Jaymes Waters'
AUTHOR_listrophy='Bradley Grzesiak'
AUTHOR_mathias='Matt Gauger'
AUTHOR_randland='Nick Karpenske'
AUTHOR_ryalnd='Ryland Herrick'
AUTHOR_twopoint718='Chris Wilson'

# Getty folks:
AUTHOR_jcarley='Jeff Carley'

# Murfie folks:
AUTHOR_angelic='Angel N. Sciortino'
AUTHOR_glynnis='Glynnis Ritchie'

# Relevance folks:
AUTHOR_jdpace='Jared Pace'

## END CONFIGURATION
#######################################################################

if [ ! -d .git ]; then
  echo "This doesn't look like a git repository."
  exit 1
fi

usernames=$(printf "%s\n" $@ | tr [A-Z] [a-z] | sort)
pair_email=$PAIR_EMAIL_USERNAME
i=1
for name in $usernames
do
  username=AUTHOR_$name
  fullname=${!username}
  if [ -z "$fullname" ]; then
    echo "Couldn't find author name for Github username: $name"
    exit 1
  fi
  fullnames[$i]=$fullname
  pair_email=$pair_email+$name
  let i++
done

pair_email=$pair_email@$PAIR_EMAIL_DOMAIN
echo $pair_email

pair_name=$(printf "%s, " "${fullnames[@]}")
pair_name=$(echo $pair_name | sed 's/,$//')
# pair_name=$(echo $pair_name | perl -p -i -e 's/,(?=,)/ and/')
echo $pair_name
# usernames = ARGV.sort

# authors = usernames.map do |username|
#   AUTHORS[username.downcase] ||
#     (puts "Couldn't find author name for Github username: #{username}"; exit 1)
# end

# if authors.any?
#   if authors.size > 2
#     names = "#{authors[0..-2].join(", ")} and #{authors.last}"
#   else
#     names = authors.join(' and ')
#   end

#   initials = authors.map { |name| name.gsub(/[^A-Z]/, '') }.join('/')

#   usernames.unshift pair_email_username
#   pair_email = "#{usernames.join '+'}@#{pair_email_domain}"

#   `git config user.name '#{names}'`
#   `git config user.initials '#{initials}'`
#   `git config user.email '#{pair_email}'`

#   puts "user.name = #{names}"
#   puts "user.initials = #{initials}"
#   puts "user.email = #{pair_email}"
# else
#   `git config --unset user.name`
#   `git config --unset user.initials`
#   `git config --unset user.email`

#   puts "Unset user.name, user.initials, and user.email"
# end
